name: CI

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: 🧹 Lint & fmt
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run go fmt
        run: |
          go fmt ./...
          git diff --exit-code

      - name: Run go vet
        run: go vet ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: run ./...

  docker:
    name: 🐳 Build & Push Docker image
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch support)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=staging-{{sha}}-{{date 'YYYYMMDDHHmmss'}},enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=production-{{sha}}-{{date 'YYYYMMDDHHmmss'}},enable=${{ startsWith(github.ref, 'refs/heads/release/v') || github.ref == 'refs/heads/main' }}
            type=raw,value={{tag}},event=tag
      - name: Set tag 
        id: set_tag
        run: |
          if [ -z "${{ steps.meta.outputs.tags }}" ]; then
            TAG="${{ secrets.YANDEX_REGISTRY }}/${{ env.IMAGE_NAME }}/temp-${GITHUB_SHA::8}-$(date +%s)"
          else
            TAG="${{ steps.meta.outputs.tags }}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          provenance: false
          push: true
          pull: true
          load: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,mode=max,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache,oci-mediatypes=true,image-manifest=true
          tags: ${{ steps.set_tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}